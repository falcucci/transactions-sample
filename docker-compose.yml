version: "3"
services:
  app01:
    restart: on-failure
    build: .
    depends_on:
      - postgres
    environment:
      DATASOURCES_ACCOUNT_ADDR: postgres
      NODE_ENV: development
    ports:
      - "3001"
    command: npm run start
    volumes:
      - .:/app/
    networks:
      - default

  app02:
    restart: on-failure
    build: .
    depends_on:
      - postgres
    environment:
      DATASOURCES_ACCOUNT_ADDR: postgres
      NODE_ENV: development
    ports:
      - "3002"
    command: npm run start
    volumes:
      - .:/app/
    networks:
      - default

  app03:
    restart: on-failure
    build: .
    depends_on:
      - postgres
    environment:
      DATASOURCES_ACCOUNT_ADDR: postgres
      NODE_ENV: development
    ports:
      - "3003"
    command: npm run start
    volumes:
      - .:/app/
    networks:
      - default

  postgres:
    image: postgres:11
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "accounts" ]
      timeout: 45s
      interval: 10s
      retries: 10
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: accounts
      POSTGRES_PASSWORD: localhost
      POSTGRES_DB: bank_accounts_db
    volumes:
      - ./db:/docker-entrypoint-initdb.d/

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx-def.conf:/etc/nginx/nginx.conf
    environment:
      - NGINX_PORT=80
    networks:
      - default
